networks:
  kafka-starrocks-net:
    external: true

services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    user: root                     # run as root to avoid permission issues
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - kafka-starrocks-net

  starrocks:
    image: starrocks/allin1-ubuntu
    container_name: starrocks
    hostname: starrocks
    environment:
      FE_ROOT_PASSWORD: ""
    ports:
      - "9030:9030"   # MySQL protocol
      - "8030:8030"   # HTTP stream load
      - "8040:8040"   # Web UI
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./starrocks-fe-meta:/data/deploy/starrocks/fe/meta
      - ./starrocks-be-storage:/data/deploy/starrocks/be/storage
    networks:
      - kafka-starrocks-net

  node-app:
    build: .
    container_name: node-cron-kafka
    ports:
      - "8089:8089"
    env_file:
      - .env
    depends_on:
      - kafka
      - starrocks
    networks:
      - kafka-starrocks-net

volumes:
  kafka-data: